// Code generated by MockGen. DO NOT EDIT.
// Source: src/cartesian/configs/lazy.go

// Package mock_configs is a generated GoMock package.
package mock_configs

import (
	gomock "github.com/golang/mock/gomock"
	configs "github.com/zored/cartesian/src/cartesian/configs"
	reflect "reflect"
)

// MockLazyValue is a mock of LazyValue interface
type MockLazyValue struct {
	ctrl     *gomock.Controller
	recorder *MockLazyValueMockRecorder
}

// MockLazyValueMockRecorder is the mock recorder for MockLazyValue
type MockLazyValueMockRecorder struct {
	mock *MockLazyValue
}

// NewMockLazyValue creates a new mock instance
func NewMockLazyValue(ctrl *gomock.Controller) *MockLazyValue {
	mock := &MockLazyValue{ctrl: ctrl}
	mock.recorder = &MockLazyValueMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockLazyValue) EXPECT() *MockLazyValueMockRecorder {
	return m.recorder
}

// LazyCreate mocks base method
func (m *MockLazyValue) LazyCreate(ctx configs.Context) (reflect.Value, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LazyCreate", ctx)
	ret0, _ := ret[0].(reflect.Value)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// LazyCreate indicates an expected call of LazyCreate
func (mr *MockLazyValueMockRecorder) LazyCreate(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LazyCreate", reflect.TypeOf((*MockLazyValue)(nil).LazyCreate), ctx)
}
